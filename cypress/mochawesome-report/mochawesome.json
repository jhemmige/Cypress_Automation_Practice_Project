{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2022-05-17T13:05:10.512Z",
    "end": "2022-05-17T13:05:21.144Z",
    "duration": 10632,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c198e64c-2206-4912-abf2-8d407a622865",
      "title": "",
      "fullFile": "cypress/integration/AngularPracticeTest/calculation_in_cart.js",
      "file": "cypress/integration/AngularPracticeTest/calculation_in_cart.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f941cbbb-83c5-496a-a4e0-d7616db946c9",
          "title": "calculation_suite",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "first_method",
              "fullTitle": "calculation_suite first_method",
              "timedOut": null,
              "duration": 6867,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const hp = new _HomePage.default();\nconst prodp = new _ProductPage.default();\nconst checkoutPg = new _CheckoutPage.default();\nconst purchPg = new _purchasePage.default(); // cy.visit(\"https://rahulshettyacademy.com/angularpractice/\") check TestAutomation_1.js\ncy.visit(Cypress.env(\"url\") + \"/angularpractice/\");\nhp.getNameInputField().type(this.data.name);\nhp.getEmailInputField().clear().type(this.data.email);\nhp.getGender().select(this.data.gender);\nhp.getBday().type(this.data.dob);\nhp.getShopBtn().click(); //this is how you iterate through array\nthis.data.prodName.forEach(element => cy.SelectProduct(element));\nprodp.getcheckout().click();\n/*cy.get(\"tr td:nth-child(4) >strong\").then(function(element){\n   const pricetxt=  element.text()\n  cy.log(pricetxt)\n  })*/\n//this testcase we are calculating the the sum of the amt ( programmatically) in the cart page \n//which is equal to the actual sum\nvar sum = 0; // we are using variable here since it needs to be reassigned\ncy.get(\"tr td:nth-child(4) >strong\").each((el, index, list) => {\n  const pricetxt = el.text();\n  const pricetxt1 = pricetxt.split(\".\"); // splits the data using a regex\n  //pricetxt.trim\n  const pricetxt2 = pricetxt1[1].trim(); // trims any leading/trailing spaces\n  cy.log(pricetxt2);\n  sum = Number(sum) + Number(pricetxt2); // by default any data in js is a string. Hence to make it a number, we use number method and pass the string into it\n  //this is resolving the promise since cypress doesnot have knowledge of adding sequentially.\n}).then(function () {\n  cy.log(Number(sum));\n});\ncy.get(\"h3 strong\").then(function (element) {\n  var Total = element.text().split(\".\");\n  Total = Total[1].trim();\n  const newTotal = Number(Total);\n  cy.log(newTotal); //chai assertion\n  expect(Number(sum)).to.equal(newTotal);\n});",
              "err": {},
              "uuid": "1b3e24c6-598d-4cce-961c-8f2b84b636bd",
              "parentUUID": "f941cbbb-83c5-496a-a4e0-d7616db946c9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1b3e24c6-598d-4cce-961c-8f2b84b636bd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6867,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "charts": true,
        "html": true,
        "json": true,
        "reportDir": "cypress/mochawesome-report",
        "reportFilename": "mochawesome",
        "overwrite": false
      },
      "version": "6.2.0"
    }
  }
}